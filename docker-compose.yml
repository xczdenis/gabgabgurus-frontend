x-base-service: &base-service
  platform: ${DOCKER_IMG_PLATFORM:-linux/amd64}
  restart: on-failure
  profiles:
    - default
  networks:
    - default

x-web-and-back-shared-network: &web-and-back-shared-network
  networks:
    - default
    - ggg_external

services:
  web:
    <<: [ *web-and-back-shared-network, *base-service ]
    env_file:
      - .env
    environment:
      NODE_ENV: production
    volumes:
      - ./.env:/${WEB_APP_WORK_DIR?Variable not set}/.env
    command: [ "npm", "start" ]
    profiles:
      - default
      - web

  proxy:
    <<: [ *web-and-back-shared-network, *base-service ]
    image: ${NGINX_IMG}
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/nginx/templates:/etc/nginx/templates:ro
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
      - ggg_backend_static:/backend/static
      - ggg_backend_media:/backend/media
    depends_on:
      web:
        condition: service_started
    environment:
      HOSTNAME: web
    env_file:
      - .env

  certbot:
    <<: *base-service
    restart: no
    image: certbot/certbot:v2.7.4
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  ggg_backend_static:
    external: true
    name: ggg_backend_static
  ggg_backend_media:
    external: true
    name: ggg_backend_media

networks:
  ggg_external:
    external: true
    name: ggg_external