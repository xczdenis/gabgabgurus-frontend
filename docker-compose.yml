x-base-service: &base-service
    platform: ${DOCKER_IMG_PLATFORM:-linux/amd64}
    restart: on-failure

services:
    web:
        <<: *base-service
        build:
            context: .
            dockerfile: deploy/web/Dockerfile
            args:
                img: ${NODE_IMG}
        env_file:
            - .env.production.local
            - .env.production
        environment:
            NODE_ENV: production
        profiles:
            - default
            - web

    proxy:
        <<: *base-service
        build:
            context: .
            dockerfile: deploy/nginx/Dockerfile
            args:
                - img=${NGINX_IMG}
        volumes:
            - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./deploy/nginx/templates:/etc/nginx/templates:ro
            - ./certbot/www/:/var/www/certbot/:ro
            - ./certbot/conf/:/etc/nginx/ssl/:ro
        env_file:
            - .env.production.local
            - .env.production
        environment:
            HOSTNAME: web
            PROXY_LISTEN_PORT: ${PROXY_LISTEN_PORT}
        ports:
            - ${PROXY_LISTEN_PORT}:${PROXY_LISTEN_PORT}
            - 443:443
        depends_on:
            web:
                condition: service_started
        profiles:
            - default

    certbot:
        <<: *base-service
        image: certbot/certbot:v2.7.4
        volumes:
            - ./certbot/www/:/var/www/certbot/:rw
            - ./certbot/conf/:/etc/letsencrypt/:rw
        profiles:
            - default
