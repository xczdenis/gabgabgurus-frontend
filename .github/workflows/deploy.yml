name: Deploy workflow

env:
    NODE_IMG: node:20.10.0-alpine
    APP_IMG_NAME: ggg-w:latest

on:
    pull_request:
        branches:
            - "main"
    workflow_dispatch:

jobs:
    build:
        name: Build images üèóÔ∏è
        runs-on: ubuntu-latest
        steps:
            -   name: Check out the repo üì•
                uses: actions/checkout@v4

            -   name: Login to Docker Hub üîë
                uses: docker/login-action@v3
                with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}

            -   name: Set up Docker Buildx üõ†Ô∏è
                uses: docker/setup-buildx-action@v3

            -   name: Build and push web-app image üê≥
                uses: docker/build-push-action@v5
                with:
                    context: .
                    file: ./deploy/web/Dockerfile
                    push: true
                    cache-from: type=gha
                    cache-to: type=gha,mode=max
                    tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.WEB_APP_IMG_NAME }}
                    build-args: |
                        img=${{ env.NODE_IMG }}
                        BASE_API_URL=${{ secrets.BASE_API_URL }}
                        BASE_WS_URL=${{ secrets.BASE_WS_URL }}

    deploy:
        name: Deploy on a Remote Server üöÄ
        runs-on: ubuntu-latest
        needs: [ build ]
        steps:
            -   name: Check out the repo üì•
                uses: actions/checkout@v4

            -   name: Connect to the server and run docker üöÄ
                uses: appleboy/ssh-action@v1.0.0
                env:
                    SERVER_PROJECT_ROOT_DIR: ${{ secrets.SERVER_PROJECT_ROOT_DIR }}
                    APP_IMG: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.APP_IMG_NAME }}
                    COMPOSE_PROJECT_NAME: ${{ secrets.COMPOSE_PROJECT_NAME }}
                    GGG_EXTERNAL_NETWORK: ${{ secrets.GGG_EXTERNAL_NETWORK }}
                    GGG_BACKEND_STATIC_VOLUME: ${{ secrets.GGG_BACKEND_STATIC_VOLUME }}
                with:
                    host: ${{ secrets.PETS_HOST }}
                    username: ${{ secrets.PETS_USERNAME }}
                    key: ${{ secrets.PETS_GHA_KEY }}
                    port: ${{ secrets.PETS_SSH_PORT }}
                    envs: SERVER_PROJECT_ROOT_DIR, APP_IMG, COMPOSE_PROJECT_NAME, GGG_EXTERNAL_NETWORK, GGG_BACKEND_STATIC_VOLUME
                    script_stop: true
                    script: |
                        cd $SERVER_PROJECT_ROOT_DIR
                        git pull
                        . ./deploy/scripts/deploy.sh                        
